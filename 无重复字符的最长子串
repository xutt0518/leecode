给定一个字符串 s ，请你找出其中不含有重复字符的 最长 
子串 的长度。

示例 1:

输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

public int lengthOfLongestSubstring(String s) {
        //窗口滑动法
        int length = s.length();
        int left =0;
        int max = 0;
        HashMap<Character,Integer> map = new HashMap<>();
        for(int i=0;i<length;i++){
            if(map.containsKey(s.charAt(i))){
                left = Math.max(left,map.get(s.charAt(i))+1);
            }
            map.put(s.charAt(i),i);
            max = Math.max(max,i-left+1);
        }
        return max;
    }

解题思路:
使用窗口滑动法 遇到重复的字符，则滑动，使其不含有重复字符串
在此示例中
使用map记录字符串，因为map是无序的，设置left，保证【left，right】区间不含有重复字符串，
遇到重复字符串，则重复的字符串下标+1，
left = Math.max(left,map.get(s.charAt(i))+1);
使用max，保证在区间【left，right】查找重复字符

tmmzuxt
left =0
滑动窗口内容是tm
遇到m，
left = 2
滑动窗口内容好是m
继续添加
mzux
遇到t
因为t的重复字符串下标为0，不再区间范围内，
继续添加
mzuxt
