209. 长度最小的子数组
给定一个含有 n 个正整数的数组和一个正整数 target 。
找出该数组中满足其总和大于等于 target 的长度最小的 
子数组
 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。
示例 1：

输入：target = 7, nums = [2,3,1,2,4,3]
输出：2
解释：子数组 [4,3] 是该条件下的长度最小的子数组
java代码：
   public int minSubArrayLen(int target, int[] nums) {
        int left = 0;
        int sum = 0;
        int min = Integer.MAX_VALUE;
        for(int i=0;i<nums.length;i++){
            sum+= nums[i];
            while(sum>=target){
                sum-=nums[left];
                min = Math.min(min,i-left+1);
                left++;
            }
        }
        return min == Integer.MAX_VALUE?0:min;
    }
思路：
使用窗口滑动法
确保窗口内的数组和大于目标
循环遍历窗口内的数据和是否满足条件
如果满足条件，
记录长度，取最小值
移除最前面的值，left++
滑动窗口右移，继续寻找满足条件的子数组
例如：{2，3,1,2,4,3}



