392. 判断子序列
给定字符串 s 和 t ，判断 s 是否为 t 的子序列。
字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。
进阶：
如果有大量输入的 S，称作 S1, S2, ... , Sk 其中 k >= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？

思路：
1.双指针思路：
使用两个指针，i，left ，一个指向t，一个指向s,遍历t，如果遇到和S一样的值，则left++，指向下一个，
如果left 等于 s的长度，说明找到存在的子序列，否则不存在
遍历t时，注意下标越界问题
也可使用while(i<t.length() && left< s.length()){

}

java code:
class Solution {
    public boolean isSubsequence(String s, String t) {
        int length1 = s.length();
        int length2 = t.length();
        int left = 0;
        int right =0;
        if(length1 ==0){
            return true;
        }
        if(length1 > length2){
            return false;
        }
    
        for(int i=0;i<length2;i++){
            if(left == length1){
                return true;
            }
            if(s.charAt(left) == t.charAt(i)){
                left++;
            }
        }
        return left == length1;
    }
}
